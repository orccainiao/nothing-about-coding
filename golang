
pprof cpu 内存调优
如果程序为非 httpserver 类型，使用此方式；在 main 函数中嵌入如下代码:
import "runtime/pprof"
 
var cpuprofile = flag.String("cpuprofile"， ""， "write cpu profile `file`")
var memprofile = flag.String("memprofile"， ""， "write memory profile to `file`")
 
func main() {
    flag.Parse()
    if *cpuprofile != "" {
        f， err := os.Create(*cpuprofile)
        if err != nil {
            log.Fatal("could not create CPU profile: "， err)
        }
        if err := pprof.StartCPUProfile(f); err != nil {
            log.Fatal("could not start CPU profile: "， err)
        }
        defer pprof.StopCPUProfile()
    }
 
    // ... rest of the program ...
 
    if *memprofile != "" {
        f， err := os.Create(*memprofile)
        if err != nil {
            log.Fatal("could not create memory profile: "， err)
        }
        runtime.GC() // get up-to-date statistics
        if err := pprof.WriteHeapProfile(f); err != nil {
            log.Fatal("could not write memory profile: "， err)
        }
        f.Close()
    }
}
运行程序
./logger -cpuprofile cpu.prof -memprofile mem.prof
go tool pprof logger cpu.prof
go tool pprof logger mem.prof

net/http/pprof
如果程序为 httpserver 类型， 则只需要导入该包:
import _ "net/http/pprof"
router := gin.Default() //如果为gin包需封装
ginpprof.Wrap(router)

go tool pprof http://127.0.0.1:4500/debug/pprof/heap
go tool pprof http://127.0.0.1:4500/debug/pprof/profile 默认30s采集cpu信息
